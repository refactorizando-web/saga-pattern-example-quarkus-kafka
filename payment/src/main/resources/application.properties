#Configuring database
quarkus.application.name=order-service
quarkus.datasource.db-kind=h2
quarkus.datasource.username=sa
quarkus.datasource.password=password
quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true


# The Kafka broker location (defaults to localhost:9092)
kafka.bootstrap.servers=localhost:9092

# Configuring the incoming channel (reading from Kafka)
mp.messaging.outgoing.payments-out.connector=smallrye-kafka
mp.messaging.outgoing.payments-out.topic=payment
mp.messaging.outgoing.payments-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.payments-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.seats-out.connector=smallrye-kafka
mp.messaging.outgoing.seats-out.topic=status-update
mp.messaging.outgoing.seats-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.seats-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configuring compensation
mp.messaging.incoming.allocate-in.connector=smallrye-kafka
mp.messaging.incoming.allocate-in.topic=payment-update
mp.messaging.incoming.allocate-in.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
mp.messaging.incoming.allocate-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming.payments-in.connector=smallrye-kafka
mp.messaging.incoming.payments-in.topic=seats
mp.messaging.incoming.payments-in.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
mp.messaging.incoming.payments-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

quarkus.log.level=INFO
quarkus.hibernate-orm.sql-load-script=load-data.sql
